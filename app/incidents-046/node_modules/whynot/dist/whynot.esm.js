function t(t,s,r,i){const n={op:s,func:r,data:i};return t.push(n),n}function s(t,s){return t}class r{constructor(){this.program=[]}test(s,r){return t(this.program,5,s,void 0===r?null:r)}jump(s){return t(this.program,3,null,s)}record(r,i){return t(this.program,4,void 0===i?s:i,r)}bad(s=1){return t(this.program,1,null,s)}accept(){return t(this.program,0,null,null)}fail(s){return t(this.program,2,s||null,null)}}class i{constructor(t,s,r){this.programLength=t,this.maxFromByPc=s,this.maxSurvivorFromByPc=r}static fromProgram(t){const s=t.length,r=[],n=[];return t.forEach(t=>{r.push(0),n.push(0)}),t.forEach((t,i)=>{switch(t.op){case 2:if(null===t.func)return;if(i+1>=s)throw new Error("Invalid program: program could run past end");r[i+1]+=1;break;case 1:case 4:if(i+1>=s)throw new Error("Invalid program: program could run past end");r[i+1]+=1;break;case 3:t.data.forEach(t=>{if(t<0||t>=s)throw new Error("Invalid program: program could run past end");r[t]+=1});break;case 5:if(i+1>=s)throw new Error("Invalid program: program could run past end");n[i+1]+=1;break;case 0:n[i]+=1}}),new i(s,r,n)}static createStub(t){const s=[],r=[];for(let i=0;i<t;++i)s.push(t),r.push(t);return new i(t,s,r)}}class n{constructor(t){this.acceptingTraces=t,this.success=t.length>0}}class h{constructor(t){this.t=0,this.i=0,this.h=new Uint16Array(t),this.l=new Uint8Array(t)}getBadness(t){return this.l[t]}add(t,s){this.l[t]=s>255?255:s;const r=function(t,s,r,i,n){let h=i,e=n;for(;h<e;){const i=h+e>>>1;r<s[t[i]]?e=i:h=i+1}return h}(this.h,this.l,s,this.i,this.t);this.h.copyWithin(r+1,r,this.t),this.h[r]=t,this.t+=1}reschedule(t,s){const r=Math.max(this.l[t],s>255?255:s);if(this.l[t]!==r){const s=this.h.indexOf(t,this.i);if(s<0||s>=this.t)return void(this.l[t]=r);this.h.copyWithin(s,s+1,this.t),this.t-=1,this.add(t,r)}}getNextPc(){return this.i>=this.t?null:this.h[this.i++]}reset(){this.t=0,this.i=0,this.l.fill(0)}}class e{constructor(t){this.o=[];let s=t.length;t.forEach(t=>{this.o.push(t>0?s:-1),s+=t}),this.u=new Uint16Array(s)}clear(){this.u.fill(0,0,this.o.length)}add(t,s){const r=this.u[s],i=this.o[s];this.u[s]+=1,this.u[i+r]=t}has(t){return this.u[t]>0}forEach(t,s){const r=this.u[t],i=this.o[t];for(let t=i;t<i+r;++t)s(this.u[t])}}function l(t,s,r=!1){return null===t?s:Array.isArray(t)?(-1===t.indexOf(s)&&(r&&(t=t.slice()),t.push(s)),t):t===s?t:[t,s]}class c{constructor(t,s){this.prefixes=t,this.record=s}}function o(t,s){let r;if(null===s){if(!Array.isArray(t))return t;r=t}else r=t===c.EMPTY?[]:Array.isArray(t)?t:[t];return new c(r,s)}c.EMPTY=new c([],null);class u{constructor(t){this.p=[],this.v=[];for(let s=0;s<t;++s)this.p.push(0),this.v.push(null)}mergeTraces(t,s,r,i,n,h){let e=!1;return r.forEach(s,s=>{const r=this.trace(s,i,n,h);var c,o,u;o=r,u=e,t=null===(c=t)?o:null===o?c:Array.isArray(o)?o.reduce((t,s)=>l(t,s,t===o),c):l(c,o,u),e=t===r}),t}trace(t,s,r,i){switch(this.p[t]){case 2:return this.v[t];case 1:return null}this.p[t]=1;let n=null;const h=s[t];if(null!==h)n=h;else if(!r.has(t))throw new Error("Trace without source at pc "+t);if(n=this.mergeTraces(n,t,r,s,r,i),null!==n){const s=i[t];null!==s&&(n=o(n,s))}return this.v[t]=n,this.p[t]=2,n}buildSurvivorTraces(t,s,r,i,n){for(let h=0,e=t.length;h<e;++h){if(!r.has(h)){s[h]=null;continue}this.v.fill(null),this.p.fill(0);const e=this.mergeTraces(null,h,r,t,i,n);if(null===e)throw new Error("No non-cyclic paths found to survivor "+h);s[h]=o(e,null)}this.v.fill(null)}}class a{constructor(t){this.g=[],this.k=[],this.m=[],this.A=new e(t.maxFromByPc),this.T=new e(t.maxSurvivorFromByPc),this.S=new u(t.programLength);for(let s=0;s<t.programLength;++s)this.g.push(null),this.k.push(null),this.m.push(null);this.k[0]=c.EMPTY}reset(t){this.A.clear(),this.T.clear(),this.g.fill(null),t&&(this.k.fill(null),this.m.fill(null),this.k[0]=c.EMPTY)}record(t,s){this.g[t]=s}has(t){return this.A.has(t)||null!==this.k[t]}add(t,s){this.A.add(t,s)}hasSurvivor(t){return this.T.has(t)}addSurvivor(t,s){this.T.add(t,s)}buildSurvivorTraces(){const t=this.k;this.S.buildSurvivorTraces(t,this.m,this.T,this.A,this.g),this.k=this.m,this.m=t}getTraces(t){const s=t.reduce((t,s)=>l(t,this.k[s]),null);return null===s?[]:Array.isArray(s)?s:[s]}}class f{constructor(t){this.I=[],this.N=new h(t.programLength),this.M=new h(t.programLength),this.P=new a(t)}reset(){this.N.reset(),this.N.add(0,0),this.I.length=0,this.P.reset(!0)}getNextThreadPc(){return this.N.getNextPc()}step(t,s,r){const i=this.P.has(s);this.P.add(t,s);const n=this.N.getBadness(t)+r;i?this.N.reschedule(s,n):this.N.add(s,n)}stepToNextGeneration(t,s){const r=this.P.hasSurvivor(s);this.P.addSurvivor(t,s);const i=this.N.getBadness(t);r?this.M.reschedule(s,i):this.M.add(s,i)}accept(t){this.I.push(t),this.P.addSurvivor(t,t)}fail(t){}record(t,s){this.P.record(t,s)}nextGeneration(){this.P.buildSurvivorTraces(),this.P.reset(!1);const t=this.N;t.reset(),this.N=this.M,this.M=t}getAcceptingTraces(){return this.P.getTraces(this.I)}}class d{constructor(t){this.U=[],this.G=t,this.V=i.fromProgram(t),this.U.push(new f(this.V))}execute(t,s){const r=this.U.pop()||new f(this.V);r.reset();const i=t.length;let h,e=-1;do{let n=r.getNextThreadPc();if(null===n)break;for(++e,h=e>=i?null:t[e];null!==n;){const t=this.G[n];switch(t.op){case 0:null===h?r.accept(n):r.fail(n);break;case 2:{const i=t.func;if(null===i||i(s)){r.fail(n);break}r.step(n,n+1,0);break}case 1:r.step(n,n+1,t.data);break;case 5:if(null===h){r.fail(n);break}if(!(0,t.func)(h,t.data,s)){r.fail(n);break}r.stepToNextGeneration(n,n+1);break;case 3:{const s=t.data,i=s.length;if(0===i){r.fail(n);break}for(let t=0;t<i;++t)r.step(n,s[t],0);break}case 4:{const i=(0,t.func)(t.data,e,s);null!=i&&r.record(n,i),r.step(n,n+1,0);break}}n=r.getNextThreadPc()}r.nextGeneration()}while(null!==h);const l=new n(r.getAcceptingTraces());return r.reset(),this.U.push(r),l}}function w(t){const s=new r;return t(s),new d(s.program)}var p={Assembler:r,VM:d,compileVM:w};export{r as Assembler,d as VM,w as compileVM,p as default};
//# sourceMappingURL=whynot.esm.js.map
